#pragma checksum "D:\пробы\blazor\TorrentWEB\TorrentWEB\Pages\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "20eee51037a4c588fc660d11355dbf51a2cbcca2"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace TorrentWEB.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\пробы\blazor\TorrentWEB\TorrentWEB\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\пробы\blazor\TorrentWEB\TorrentWEB\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\пробы\blazor\TorrentWEB\TorrentWEB\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\пробы\blazor\TorrentWEB\TorrentWEB\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\пробы\blazor\TorrentWEB\TorrentWEB\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\пробы\blazor\TorrentWEB\TorrentWEB\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\пробы\blazor\TorrentWEB\TorrentWEB\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\пробы\blazor\TorrentWEB\TorrentWEB\_Imports.razor"
using TorrentWEB;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\пробы\blazor\TorrentWEB\TorrentWEB\_Imports.razor"
using TorrentWEB.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\пробы\blazor\TorrentWEB\TorrentWEB\Pages\Index.razor"
using TorrentWEB.Core.Parse;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\пробы\blazor\TorrentWEB\TorrentWEB\Pages\Index.razor"
using TorrentWEB.Core.Sites;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\пробы\blazor\TorrentWEB\TorrentWEB\Pages\Index.razor"
using AutoMapper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\пробы\blazor\TorrentWEB\TorrentWEB\Pages\Index.razor"
using TorrentWEB.Components.BigComponents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\пробы\blazor\TorrentWEB\TorrentWEB\Pages\Index.razor"
using TorrentWEB.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 26 "D:\пробы\blazor\TorrentWEB\TorrentWEB\Pages\Index.razor"
 
    List<Cart> _itemPage = null;
    int countPages = 0;
    TorrLafa _kinozavl = new TorrLafa();
    int _currentPage = 0;
    bool _load = false;
    UsualSetting _map;

    protected override async Task OnInitializedAsync()
    {
        _load = true;
        await GetItems();

        _map = _mapper.Map<UsualSetting>(_kinozavl);

        if (_itemPage == null && countPages == 0 && _currentPage == 0)
        {
            await SetItems();
            await UpdateFilm();
        }
        else
        {
            await UpdateFilm();
        }
        
        
        StateHasChanged();
        _load = false;
    }

    

    private async Task SetItems()
    {
        await _storageService.SetItemAsync("CurrentPage", 0);
    }

    private async Task GetItems()
    {
        _itemPage = await _storageService.GetItemAsync<List<Cart>>("ItemPage");
        countPages = await _storageService.GetItemAsync<int>("CountPage");
        _currentPage = await _storageService.GetItemAsync<int>("CurrentPage");
    }
    
     async Task UpdateFilm()
     {
         try
         {
             _currentPage = await _storageService.GetItemAsync<int>("CurrentPage");
             var html = _loader.GetHtmlByPage(_map,_currentPage).Result;

             if (html != null)
             {
                 _itemPage = _parse.GetObjects(html, _map);
                 countPages = _parse.GetCountPages(html, _map);
                 await _storageService.SetItemAsync("ItemPage", _itemPage);
                 await _storageService.SetItemAsync("CountPage", countPages);
             }
         }
         catch (Exception e)
         {
             await _runtime.InvokeAsync<string>("console.log('swer')");
         }
         StateHasChanged();
        
    }
    


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime _runtime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UsualParse _parse { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IMapper _mapper { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HtmlLoader _loader { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Blazored.SessionStorage.ISessionStorageService _storageService { get; set; }
    }
}
#pragma warning restore 1591
